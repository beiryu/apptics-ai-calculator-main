// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 82805ebdf0b5ff0d "Apptics (copy)", do not edit manually */
// /:https://framerusercontent.com/modules/emeX5mtK81zY3xjRZZog/yPJrR3NnFteL79l7EdeJ/GJPlvTOnP.js
import { jsx as _jsx } from "react/jsx-runtime";
import { addPropertyControls, ControlType, cx, motion, withCSS } from "unframer";
import * as React from "react";
import { forwardRef as forwardRef2 } from "react";
var mask = `url('data:image/svg+xml,<svg display="block" role="presentation" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="M 0 12 L 6 6 L 0 0" fill="transparent" height="12px" id="lepvFL2AM" stroke-dasharray="" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" stroke="var(--43q7um, rgb(0,0,0))" transform="translate(9 6)" width="6px"/></svg>') alpha no-repeat center / auto var(--framer-icon-mask-mode, add), var(--framer-icon-mask, none)`;
var SVG = /* @__PURE__ */ forwardRef2((props, ref) => {
  const { animated, layoutId, children, ...rest } = props;
  return animated
    ? /* @__PURE__ */ _jsx(motion.div, { ...rest, layoutId, ref })
    : /* @__PURE__ */ _jsx("div", { ...rest, ref });
});
var getProps = ({ height, id, stroke, width, ...props }) => {
  return { ...props, UO5clYVeQ: stroke ?? props.UO5clYVeQ ?? "rgb(0, 0, 0)" };
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
  const { style, className, layoutId, variant, UO5clYVeQ, ...restProps } = getProps(props);
  return /* @__PURE__ */ _jsx(SVG, {
    ...restProps,
    className: cx("framer-3J82X", className),
    layoutId,
    ref,
    style: { "--43q7um": UO5clYVeQ, ...style },
  });
});
var css = [
  `.framer-3J82X { -webkit-mask: ${mask}; aspect-ratio: 1; background-color: var(--43q7um); mask: ${mask}; width: 24px; }`,
];
var Icon = withCSS(Component, css, "framer-3J82X");
Icon.displayName = "Chevron Right";
var stdin_default = Icon;
addPropertyControls(Icon, {
  UO5clYVeQ: {
    defaultValue: "rgb(0, 0, 0)",
    hidden: false,
    title: "Stroke",
    type: ControlType.Color,
  },
});

export { stdin_default };
